scalar IntArrayDict
scalar PlayerEntryDict

type Query {
  getRoomById(id: ID!): Room
  getRoomByTag(tag: String!): Room
  getUserById(id: ID!): User
  verifyUser(id: ID!, phone: String!): User
}

type Mutation {
  createRoom(tag: String!): ID
  createUser: ID
  addPlayerToRoom(room_id: ID!, user_id: ID!): Room
  startGame(room_id: ID!): Room
  resetRoom(room_id: ID!, tag: String!): Room
  setPlayerOrders(room_id: ID!, user_id: ID!, ordered: [ID!]!): Room
  startTurn(room_id: ID!, user_id: ID!, card_source: Int!): Room
  finishTurn(room_id: ID!, user_id: ID!, swap_index: Int): Room
  addPhoneNumberToUser(id: ID!, phone: String!): User
  changeCardsPerHand(room_id: ID!, cards_per_hand: Int!): Room
  changeTotalCards(room_id: ID!, total_cards: Int!): Room
}

type Turn {
  index: Int
  user: ID
  card: Int
  source: Int
}

type Settings {
  total_cards: Int!
  cards_per_hand: Int!
}


type User {
  _id: ID!
  phone: String
  tag: String
  color: String
  total_games: Int
  total_wins: Int
}

type Room {
  _id: ID!
  tag: String!
  discard_stack: [Int!]!
  hands: IntArrayDict
  players: PlayerEntryDict!
  phase: Int
  ordered: [ID!]!
  turn: Turn
  settings: Settings
  winner: ID
}
